nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = case_when(
str_detect(month_ride, "(December)*(January)*(February)*") ~ "Winter",
str_detect(month_ride, "(March)*(April)*(May)*") ~ "Spring",
str_detect(month_ride, "(June)*(July)*(August)*") ~ "Summer",
str_detect(month_ride, "(September)*(October)*(November)*") ~ "Autumn",
),
.after = stop_time)
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = case_when(
str_detect(month_ride, "^[D]?[Ja]?[F]?") ~ "Winter",
str_detect(month_ride, "^[Mar]?[Ap]?[May]?") ~ "Spring",
str_detect(month_ride, "^[Ju]?[Au]?") ~ "Summer",
str_detect(month_ride, "^[Se]?[Oc]?[No]?") ~ "Autumn",
),
.after = stop_time)
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = case_when(
str_detect(month_ride, "^[D]+[Ja]+[F]+") ~ "Winter",
str_detect(month_ride, "^[Mar]+[Ap]+[May]+") ~ "Spring",
str_detect(month_ride, "^[Ju]+[Au]+") ~ "Summer",
str_detect(month_ride, "^[Se]+[Oc]+[No]+") ~ "Autumn",
),
.after = stop_time)
winter <- c("December", "January", "February")
spring <- c("March", "Arpil", "May")
summer <- c("June", "July", "August")
autumn <- c("September", "October", "November")
winter <- c("December", "January", "February")
spring <- c("March", "Arpil", "May")
summer <- c("June", "July", "August")
autumn <- c("September", "October", "November")
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = case_when(
str_detect(month_ride, winter) ~ "Winter",
str_detect(month_ride, spring) ~ "Spring",
str_detect(month_ride, summer) ~ "Summer",
str_detect(month_ride, autumn) ~ "Autumn",
),
.after = stop_time)
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"))
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes")),
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = case_when(
str_detect(month_ride, winter) ~ "Winter",
str_detect(month_ride, spring) ~ "Spring",
str_detect(month_ride, summer) ~ "Summer",
str_detect(month_ride, autumn) ~ "Autumn",
),
.after = stop_time)
?recode
winter <- c("December", "January", "February")
spring <- c("March", "Arpil", "May")
summer <- c("June", "July", "August")
autumn <- c("September", "October", "November")
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = recode(month_ride,
"Winter" = winter,
"Spring" = spring,
"Summer" = summer,
"Autumn" = autumn)
.after = stop_time)
winter <- c("December", "January", "February")
spring <- c("March", "Arpil", "May")
summer <- c("June", "July", "August")
autumn <- c("September", "October", "November")
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = recode(month_ride,
"Winter" = winter,
"Spring" = spring,
"Summer" = summer,
"Autumn" = autumn),
.after = stop_time)
winter <- c("December", "January", "February")
spring <- c("March", "Arpil", "May")
summer <- c("June", "July", "August")
autumn <- c("September", "October", "November")
nyc_bikes %>%
mutate(month_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = case_when(
str_detect(month_ride, "December") ~ "Winter",
str_detect(month_ride, "January") ~ "Winter",
str_detect(month_ride, "February") ~ "Winter",
str_detect(month_ride, "March") ~ "Spring",
str_detect(month_ride, "April") ~ "Spring",
str_detect(month_ride, "May") ~ "Spring",
str_detect(month_ride, "June") ~ "Summer",
str_detect(month_ride, "July") ~ "Summer",
str_detect(month_ride, "August") ~ "Summer",
str_detect(month_ride, "September") ~ "Autumn",
str_detect(month_ride, "October") ~ "Autumn",
str_detect(month_ride, "November") ~ "Autumn",
),
.after = stop_time)
library(tidyverse)
library(janitor)
library(tsibble)
library(brew)
library(lubridate)
library(feasts)
library(sf)
library(leaflet)
library(slider)
nyc_bikes <- tsibbledata::nyc_bikes %>% clean_names()
glimpse(nyc_bikes)
nyc_bikes %>%
filter(is.na(bike_id:gender))
nyc_bikes %>%
distinct(type)
nyc_bikes %>%
distinct(start_station)
nyc_bikes %>%
distinct(gender)
nyc_bikes %>%
group_by(gender) %>%
summarise(count = n())
nyc_bikes %>%
group_by(type, gender) %>%
summarise(count = n())
nyc_bikes %>%
group_by(type, gender, birth_year) %>%
summarise(count = n()) %>%
arrange(desc(count))
nyc_bikes <- nyc_bikes %>%
mutate(month_of_ride = month(start_time, label = TRUE, abbr = FALSE),
day_of_week_ride = wday(start_time, label = TRUE, abbr = TRUE),
year_of_ride = year(start_time),
date = as_date(start_time),
ride_duration = as.numeric(as.period(stop_time - start_time), "minutes"),
season = case_when(
str_detect(month_of_ride, "December") ~ "Winter",
str_detect(month_of_ride, "January") ~ "Winter",
str_detect(month_of_ride, "February") ~ "Winter",
str_detect(month_of_ride, "March") ~ "Spring",
str_detect(month_of_ride, "April") ~ "Spring",
str_detect(month_of_ride, "May") ~ "Spring",
str_detect(month_of_ride, "June") ~ "Summer",
str_detect(month_of_ride, "July") ~ "Summer",
str_detect(month_of_ride, "August") ~ "Summer",
str_detect(month_of_ride, "September") ~ "Autumn",
str_detect(month_of_ride, "October") ~ "Autumn",
str_detect(month_of_ride, "November") ~ "Autumn",
),
season = factor(season, order = TRUE),
.after = stop_time)
nyc_bikes %>%
mutate(type = factor(type, order = TRUE)) %>%
index_by(type) %>%
summarise(count = n())
monthly_hires <- nyc_bikes %>%
index_by(month_of_ride) %>%
summarise(count = n())
monthly_hires %>%
ggplot(aes(x = month_of_ride,
y = count)) +
geom_point() +
geom_line(group = 1)
nyc_bikes %>%
filter(ride_duration <= 100) %>%
index_by(month_of_ride) %>%
summarise(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time)) +
geom_point() +
geom_line(group = 1)
nyc_bikes %>%
filter(ride_duration <= 100) %>%
index_by(month_of_ride) %>%
summarise(sum_monthly_ride_time = sum(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = sum_monthly_ride_time)) +
geom_point() +
geom_line(group = 1)
season_hires <- nyc_bikes %>%
index_by(season) %>%
summarise(count = n())
season_hires %>%
ggplot(aes(x = season,
y = count)) +
geom_col(aes(fill = season)) +
scale_fill_brewer(palette = "RdBu")
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(season) %>%
summarise(mean_seasonal_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = season,
y = mean_seasonal_ride_time)) +
geom_col(aes(fill = season)) +
scale_fill_brewer(palette = "RdBu")
daily_hires <- nyc_bikes %>%
index_by(date) %>%
summarise(count = n())
daily_hires %>%
ggplot(aes(x = date,
y = count)) +
geom_line()
dow_hires <- nyc_bikes %>%
index_by(day_of_week_ride) %>%
summarise(count = n())
dow_hires %>%
ggplot(aes(x = day_of_week_ride,
y = count)) +
geom_point() +
geom_line(group = 1)
nyc_bikes %>%
filter(ride_duration < 150) %>%
ggplot(aes(x = ride_duration)) +
geom_histogram(bins = 100, col = "white") +
scale_x_log10()
nyc_bikes %>%
filter(ride_duration < 150) %>%
mutate(type = factor(type, order = TRUE)) %>%
index_by(type) %>%
mutate(mean_time = mean(ride_duration)) %>%
ggplot(aes(x = type,
y = mean_time)) +
geom_line()
nyc_bikes %>%
filter(ride_duration <= 100) %>%
index_by(month_of_ride) %>%
mutate(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time,
colour = type)) +
geom_point() +
geom_line()
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(type) %>%
mutate(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time)) +
geom_line(aes(group = type, colour = type))
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(type) %>%
mutate(sum_monthly_ride_time = sum(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = sum_monthly_ride_time)) +
geom_line(aes(group = type, colour = type))
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(gender) %>%
mutate(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time)) +
geom_line(aes(group = gender, colour = gender))
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(gender) %>%
mutate(sum_monthly_ride_time = sum(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = sum_monthly_ride_time)) +
geom_line(aes(group = gender, colour = gender))
nyc_bikes %>%
filter(gender == "Unknown",
type == "Customer")
leaflet(nyc_bikes) %>%
addTiles() %>%
addMarkers(
lng = ~start_long,
lat = ~start_lat,
popup = ~paste("Station:", start_station)
)
# library(infer)
#
# observed_stat <- nyc_bikes %>%
#   specify(response = type, success = "Customer") %>%
#   calculate(stat = "prop")
#
# null_distribution <- nyc_bikes %>%
#   specify(response = type, success = "Customer") %>%
#   hypothesise(null = "point", p = 0.075) %>%
#   generate(reps = 50000, type = "draw") %>%
#   calculate(stat = "prop")
#
# null_distribution %>%
#   visualise()+
#   shade_p_value(obs_stat = observed_stat, direction = "left")
#
# null_distribution %>%
#   get_p_value(obs_stat = observed_stat, direction = "left")
nyc_bikes %>%
filter(ride_duration <= 100) %>%
index_by(month_of_ride) %>%
mutate(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time,
colour = type)) +
geom_point() +
geom_line(group = 1)
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(type) %>%
mutate(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time)) +
geom_point() +
geom_line(aes(group = type, colour = type))
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(type) %>%
mutate(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time)) +
geom_point(size = 1) +
geom_line(aes(group = type, colour = type))
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(type) %>%
mutate(sum_monthly_ride_time = sum(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = sum_monthly_ride_time)) +
geom_point(size = 1) +
geom_line(aes(group = type, colour = type))
nyc_bikes %>%
filter(ride_duration < 600) %>%
index_by(month_of_ride) %>%
group_by(gender) %>%
mutate(mean_monthly_ride_time = mean(ride_duration)) %>%
ggplot(aes(x = month_of_ride,
y = mean_monthly_ride_time)) +
geom_point(size = 1) +
geom_line(aes(group = gender, colour = gender))
nyc_bikes %>%
filter(gender == "Unknown",
type == "Subscriber")
nyc_bikes %>%
filter(gender == "Unknown",
type == "Customer")
nyc_bike
nyc_bikes
nyc_bikes %>%
index_by(date) %>%
mutate(
duration_moving_average = slide_dbl(
.x = ride_duration,
.f = ~ mean(.x),
.before = 500,
.after = 500,
complete = TRUE
)
)
nyc_bikes %>%
index_by(date) %>%
mutate(
duration_moving_average = slide_dbl(
.x = ride_duration,
.f = ~ mean(.x),
.before = 500,
.after = 500,
complete = TRUE
)
) %>%
ggplot() +
geom_line(aes(x = date,
y = ride_duration),
colour = "grey") +
geom_line(aes(x = date,
y = duration_moving_avergae),
colour = "red")
rolling <- nyc_bikes %>%
index_by(date) %>%
mutate(
duration_moving_average = slide_dbl(
.x = ride_duration,
.f = ~ mean(.x),
.before = 500,
.after = 500,
complete = TRUE
)
)
rolling
rolling <- nyc_bikes %>%
index_by(date) %>%
mutate(
duration_moving_average = slide_dbl(
.x = ride_duration,
.f = ~ mean(.x),
.before = 500,
.after = 500,
complete = TRUE
)
)
rolling %>%
ggplot() +
geom_line(aes(x = date,
y = ride_duration),
colour = "grey") +
geom_line(aes(x = date,
y = duration_moving_average),
colour = "red")
rolling <- nyc_bikes %>%
filter(ride_duration <= 100)
index_by(date) %>%
mutate(
duration_moving_average = slide_dbl(
.x = ride_duration,
.f = ~ mean(.x),
.before = 500,
.after = 500,
complete = TRUE
)
)
rolling <- nyc_bikes %>%
filter(ride_duration <= 100) %>%
index_by(date) %>%
mutate(
duration_moving_average = slide_dbl(
.x = ride_duration,
.f = ~ mean(.x),
.before = 500,
.after = 500,
complete = TRUE
)
)
rolling %>%
ggplot() +
geom_line(aes(x = date,
y = ride_duration),
colour = "grey") +
geom_line(aes(x = date,
y = duration_moving_average),
colour = "red")
rolling <- nyc_bikes %>%
filter(ride_duration <= 100) %>%
index_by(date) %>%
mutate(
duration_moving_average = slide_dbl(
.x = ride_duration,
.f = ~ mean(.x),
.before = 1000,
.after = 1000,
complete = TRUE
)
)
rolling %>%
ggplot() +
geom_line(aes(x = date,
y = ride_duration),
colour = "grey") +
geom_line(aes(x = date,
y = duration_moving_average),
colour = "red")
daily_hires
daily_hires <- nyc_bikes %>%
index_by(date) %>%
summarise(count = n())
daily_hires %>%
ggplot(aes(x = date,
y = count)) +
geom_line()
daily_hires
daily_hires <- nyc_bikes %>%
index_by(date) %>%
summarise(count = n())
daily_hires %>%
ggplot(aes(x = date,
y = count)) +
geom_line()
nyc_bikes %>%
filter(ride_duration < 150) %>%
mutate(type = factor(type, order = TRUE)) %>%
index_by(type) %>%
mutate(mean_time = mean(ride_duration)) %>%
ggplot(aes(x = type,
y = mean_time)) +
geom_line()
nyc_bikes %>%
filter(ride_duration <= 100) %>%
index_by(season) %>%
summarise(sum_monthly_ride_time = sum(ride_duration)) %>%
ggplot(aes(x = season,
y = sum_monthly_ride_time)) +
geom_col(aes(fill = season)) +
scale_fill_brewer(palette = "RdBu")
