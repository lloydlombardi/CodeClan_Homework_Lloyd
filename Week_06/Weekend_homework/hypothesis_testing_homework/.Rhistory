library(tidyverse)
library(infer)
sleep <- data("msleep")
sleep <- data("msleep")
glimpse(sleep)
sleep
msleep
sleep <- msleep
glimpse(msleep)
sleep <- msleep
glimpse(sleep)
data("msleep")
glimpse(msleep)
msleep %>%
filter(is.na(sleep_total))
all_animal_observed_statistic <- msleep %>%
specify(response = sleep_total) %>%
calculate(stat = "mean")
all_animal_observed_statistic <- msleep %>%
specify(response = sleep_total) %>%
calculate(stat = "mean")
all_animal_observed_statistic
all_animal_null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesise(null = "point", mu = 7) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
all_animal_null_distribution %>%
visualise(bins = 15) +
shade_p_value(obs_stat = all_animal_observed_statistic, direction = "both")
all_animal_p_value <- all_animal_null_distribution %>%
get_p_value(obs_stat = all_animal_observed_statistic, direction = "both")
all_animal_p_value <- all_animal_null_distribution %>%
get_p_value(obs_stat = all_animal_observed_statistic, direction = "both")
all_animal_p_value
omni_herbi <- msleep %>%
filter(vore %in% c("omni", "herbi"))
omni_herbi
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white",
bins = 15)
omni_herbi %>%
ggplot(aes(x = sleep_total,
y = vore)) +
geom_boxplot() +
geom_jitter(width = 0.2,
colour = 2)
omnivore_observed_stat <- omni_herbi %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
omnivore_observed_stat
omni_null_distribution <- omni_herbi %>%
specify(sleep_total ~ vore) %>%
hypothesise(null = "independence", mu = 0) %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
omni_null_distribution <- omni_herbi %>%
specify(sleep_total ~ vore) %>%
hypothesise(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
omni_null_distribution %>%
visualise() +
shade_p_value(obs_stat = omnivore_observed_stat, direction = "right")
omni_null_distribution %>%
get_p_value(obs_stat = omnivore_observed_stat, direction = "right")
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated")
domesticated
domesticated %>%
ggplot(aes(x = is_domesticated)) +
geom_histogram(bins = 10,
col = "white")
domestic_observed_stat <- domesticated %>%
specify(response = is_domesticated, success = "TRUE") %>%
calculate(stat = "prop")
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
filter(!is.na(is_domesticated))
domesticated
domestic_observed_stat <- domesticated %>%
specify(response = is_domesticated, success = "TRUE") %>%
calculate(stat = "prop")
domestic_observed_stat
?coalesce
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = if_else(is_domesticated == NA, "unknown", is_domesticated))
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = if_else(condition =  is_domesticated == NA, true =  "unknown",false =  is_domesticated))
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = if_else(condition =  is_domesticated == NA, true =  "unknown",false = (is_domesticated)))
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = coalesce(is_domesticated, "unknown" na.rm = TRUE)
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = coalesce(is_domesticated, "unknown", na.rm = TRUE)
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = coalesce(is_domesticated, "unknown", na.rm = TRUE))
?coalesce
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = replace_na(is_domesticated, "unknown"))
domesticated <- msleep %>%
mutate(is_domesticated = conservation == "domesticated") %>%
mutate(is_domesticated = replace_na(is_domesticated, FALSE))
domesticated
domestic_observed_stat <- domesticated %>%
specify(response = is_domesticated, success = "TRUE") %>%
calculate(stat = "prop")
domestic_observed_stat
domestic_null_distribution <- domesticated %>%
specify(response = is_domesticated, success = "TRUE") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "draw") %>%
calculate(stat = "prop")
domestic_null_distribution %>%
visualise(bins = 10) +
shade_p_value(obs_stat = domestic_observed_stat, direction = "right")
domestic_null_distribution %>%
visualise(bins = 5) +
shade_p_value(obs_stat = domestic_observed_stat, direction = "right")
domestic_null_distribution %>%
visualise(bins = 15) +
shade_p_value(obs_stat = domestic_observed_stat, direction = "right")
domestic_null_distribution %>%
visualise(bins = 12) +
shade_p_value(obs_stat = domestic_observed_stat, direction = "right")
domestic_null_distribution %>%
get_p_value(obs_stat = domestic_observed_stat, direction = "right")
