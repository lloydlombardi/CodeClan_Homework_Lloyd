source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
library(gtools)
library(tidyverse)
library(gtools)
titanic <- read_csv("data/titanic.csv")
source("prob.R")
titanic
titanic %>%
distinct(class)
titanic %>%
mutate(class = recode(class,
"3rd" = "passenger"))
titanic %>%
mutate(class = recode(class,
"3rd" = "passenger",
"2nd" = "passenger",
"1st" = "passenger",
"engineering crew", = "crew",
titanic %>%
mutate(class = recode(class,
"3rd" = "passenger",
"2nd" = "passenger",
"1st" = "passenger",
"engineering crew" = "crew",
"victualling crew" = "crew",
"restaurant staff" = "crew",
"deck crew" = "crew"))
titanic <- titanic %>%
mutate(class = recode(class,
"3rd" = "passenger",
"2nd" = "passenger",
"1st" = "passenger",
"engineering crew" = "crew",
"victualling crew" = "crew",
"restaurant staff" = "crew",
"deck crew" = "crew"))
titanic <- titanic %>%
mutate(class = recode(class,
"3rd" = "passenger",
"2nd" = "passenger",
"1st" = "passenger",
"engineering crew" = "crew",
"victualling crew" = "crew",
"restaurant staff" = "crew",
"deck crew" = "crew"))
titanic %>%
distinct(class)
titanic %>%
mutate(survived = as.logical(survived))
titanic
titanic %>%
mutate(survived = recode(survived,
"no" = FALSE,
"yes" = TRUE))
titanic <- titanic %>%
mutate(survived = recode(survived,
"no" = FALSE,
"yes" = TRUE))
library(tidyverse)
library(gtools)
library(janitor)
titanic <- read_csv("data/titanic.csv")
source("prob.R")
titanic %>%
tabyl(class, survived)
titanic
titanic <- titanic %>%
mutate(class = recode(class,
"3rd" = "passenger",
"2nd" = "passenger",
"1st" = "passenger",
"engineering crew" = "crew",
"victualling crew" = "crew",
"restaurant staff" = "crew",
"deck crew" = "crew"))
titanic <- titanic %>%
mutate(survived = recode(survived,
"no" = FALSE,
"yes" = TRUE))
titanic %>%
tabyl(class, survived)
titanic %>%
tabyl(class, survived) %>%
adorn_totals(where = c("row", "col"))
titanic %>%
tabyl(class, survived) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_title()
titanic %>%
filter(class == "crew")
titanic %>%
filter(class == "crew", survived == TRUE)
prob_crew_surv <- titanic %>%
filter(class == "crew" & survived)
prob_crew_surv
prob_crew_surv <- titanic %>%
filter(class == "crew" & survived) %>%
summarise(prob = n() / nrow(titanic))
prob_crew_surv <- titanic %>%
filter(class == "crew" & survived) %>%
summarise(prob = n() / nrow(titanic))
prob_crew_surv
prob_pass_surv <- titanic %>%
filter(class == "passenger" & survived) %>%
summarise(prob = n() / nrow(titanic))
prob_pass_surv
prob_surv_given_crew <- titanic %>%
filter(class == "crew") %>%
summarise(prob = sum(survived) / n())
prob_surv_given_crew
prob_surv_given_pass <- titanic %>%
filter(class == "passenger") %>%
summarise(prob = sum(survived) / n())
prob_surv_given_pass
q1 <- rolldie(1)
q1
q1 <- rolldie(1) %>%
filter(X1 < 5)
q1
one_die <- rolldie(1)
one_die <- rolldie(1)
q1 <- one_die %>%
filter(X1 < 5) %>%
summarise(prob = n() / nrow(one_die))
q1
one_die <- rolldie(1)
q1 <- one_die %>%
filter(X1 < 5) %>%
summarise(prob = n() / nrow(one_die))
q1
6 * 6 * 6
s <- rolldie(4)
s
s <- rolldie(4)
s <- s %>%
mutate(total = sum(X1:X4))
s
s <- rolldie(4)
s <- s %>%
mutate(total = X1 + X2 + X3 + X4)
s
s <- rolldie(4)
s <- s %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total %in% c(5, 6, 7))
s
s
s <- rolldie(4)
s <- rolldie(4)
s_5_to_7 <- s %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total %in% c(5, 6, 7))
s_5_to_7
s <- rolldie(4)
s_5_to_7 <- s %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total %in% c(5, 6, 7)) %>%
summarise(prob = n() / nrow(s))
s_5_to_7
s <- rolldie(4)
s_5_to_7 <- s %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total %in% c(5, 6, 7)) %>%
summarise(prob = n() / nrow(s))
s_5_to_7
s
s_5_to_7
s_5_to_7 <- s %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total %in% c(5, 6, 7))
s_5_to_7
s <- rolldie(4)
s_5_to_7 <- s %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total %in% c(5, 6, 7)) %>%
summarise(prob = n() / nrow(s))
s_5_to_7
s_5_to_7 <- s %>%
mutate(total = X1 + X2 + X3 + X4)
s_5_to_7
s <- rolldie(4)
s_5_to_7 <- s %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total %in% c(5, 6, 7)) %>%
summarise(prob = n() / nrow(s))
s_5_to_7
people <- c("Tallest", "Second Tallest", "Middle", "Second Shortest", "Shortest")
permutations(n = 5, r = 5, v = people, repeats.allowed = FALSE)
people <- c("Tallest", "Second Tallest", "Middle", "Second Shortest", "Shortest")
seating <- as_tibble(permutations(n = 5, r = 5, v = people, repeats.allowed = FALSE))
library(tidyverse)
library(gtools)
library(janitor)
people <- c("Tallest", "Second Tallest", "Middle", "Second Shortest", "Shortest")
seating <- as_tibble(permutations(n = 5, r = 5, v = people, repeats.allowed = FALSE))
seating
people <- c("Tallest", "Second Tallest", "Middle", "Second Shortest", "Shortest")
seating <- as_tibble(permutations(n = 5, r = 5, v = people, repeats.allowed = FALSE))
seating <- seating %>%
rename(seat_1 = V1, seat_2 = V2, seat_3 = V3, seat_4 = V4, seat_5 = V5)
seating
people <- c("Tallest", "Second Tallest", "Middle", "Second Shortest", "Shortest")
seating <- as_tibble(permutations(n = 5, r = 5, v = people, repeats.allowed = FALSE))
seating <- seating %>%
rename(seat_1 = V1, seat_2 = V2, seat_3 = V3, seat_4 = V4, seat_5 = V5)
height_order <- seating %>%
filter(seat_1 == "Tallest", seat_2 == "Second Tallest", seat_3 == "Middle", seat_4 == "Second Shortest", seat_5 == "Shortest")
height_order
people <- c("Tallest", "Second Tallest", "Middle", "Second Shortest", "Shortest")
seating <- as_tibble(permutations(n = 5, r = 5, v = people, repeats.allowed = FALSE))
seating <- seating %>%
rename(seat_1 = V1, seat_2 = V2, seat_3 = V3, seat_4 = V4, seat_5 = V5)
height_order <- seating %>%
filter(seat_1 == "Tallest", seat_2 == "Second Tallest", seat_3 == "Middle", seat_4 == "Second Shortest", seat_5 == "Shortest") %>%
summarise(prob = n()/ nrow(seating))
people <- c("Tallest", "Second Tallest", "Middle", "Second Shortest", "Shortest")
seating <- as_tibble(permutations(n = 5, r = 5, v = people, repeats.allowed = FALSE))
seating <- seating %>%
rename(seat_1 = V1, seat_2 = V2, seat_3 = V3, seat_4 = V4, seat_5 = V5)
height_order <- seating %>%
filter(seat_1 == "Tallest", seat_2 == "Second Tallest", seat_3 == "Middle", seat_4 == "Second Shortest", seat_5 == "Shortest") %>%
summarise(prob = n()/ nrow(seating))
height_order
seating
height_order
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
combinations(n = 6, r = 6, v = dice, repeats.allowed = FALSE)
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
combinations(n = 6, r = 6, v = dice, repeats.allowed = FALSE)
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
combinations(n = 6, r = 6, v = dice, repeats.allowed = TRUE)
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
combinations(n = 6, r = 6, v = dice, repeats.allowed = FALSE)
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
combinations(n = 6, r = 6, v = dice, repeats.allowed = TRUE)
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
permutations(n = 6, r = 6, v = dice, repeats.allowed = FALSE)
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
dim(permutations(n = 6, r = 6, v = dice, repeats.allowed = FALSE))
dice <- c("roll 1", "roll 2", "roll 3", "roll 4", "roll 5", "roll 6")
pattern <- c(1, 2, 3, 4, 5, 6)
permutations(n = 6, r = 6, v = dice, repeats.allowed = FALSE)
permutations(n = 6, r = 6,repeats.allowed = FALSE)
